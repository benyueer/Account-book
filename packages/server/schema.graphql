# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ConsumptionType {
  id: Float!
  baseType: Float!
  name: String!
  createBy: Float!
  pid: Float!
  familyId: Float!
}

type ConsumptionTypeItem {
  id: Float!
  name: String!
  pid: Float!
  baseType: BASE_TYPE!
  icon: String
  children: [ConsumptionTypeItem!]
}

enum BASE_TYPE {
  IN
  OUT
}

type Family {
  id: Float!
  name: String!
  picture: String
}

type User {
  id: Float!
  name: String
  password: String!
  family: Family
  accounts: [Float!]
  avatar: String
}

type Record {
  id: Float!
  users: User!
  consumptionType: Float!
  account: Account!
  type: RECORD_TYPE!
  date: DateTime!
  amount: Float!
  remark: String
  imgs: [String!]
}

enum RECORD_TYPE {
  IN
  OUT
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Account {
  id: Float!
  type: ACCOUNT_TYPE!
  user: User!
  name: String!
  no: String!
  overage: Float!
  costCount: Float!
  incomeCount: Float!
  icon: String
}

enum ACCOUNT_TYPE {
  CASH
  DEBIT_CARD
  CREDIT_CARD
}

type Token {
  access_token: String
  id: Float
  familyId: Float
  name: String
  avatar: String
}

type Query {
  queryUserByName(name: String!): User!
  queryById(id: Float!): User!
  getFamilyMembers(id: Float!): [User!]!
  queryAccountListByUserId(userId: Float!): [Account!]!
  getConsumptionType(familyId: Float): [ConsumptionTypeItem!]!
  recordList(limit: Float!, offset: Float!, userIds: [Float!]!): [Record!]!
}

type Mutation {
  createUser(user: CreateUserInput!): User!
  login(name: String!, password: String!): Token!
  createAccount(data: AccountInput!): Account!
  updateAccount(data: AccountInput!): Account!
  createConsumptionType(data: CreateTypeInput!): ConsumptionType!
  updateConsumptionType(data: CreateTypeInput!): ConsumptionType!
  createRecord(data: RecordInput!): Record!
}

input CreateUserInput {
  name: String!
  password: String!
}

input AccountInput {
  id: Float
  name: String
  type: ACCOUNT_TYPE
  userId: Float
  no: String
  overage: Float
}

input CreateTypeInput {
  id: Float
  baseType: BASE_TYPE
  name: String
  pid: Float
  familyId: Float
}

input RecordInput {
  members: [Float!]!
  type: RECORD_TYPE!
  date: DateTime!
  remark: String!
  imgs: [String!]
  consumptionType: Float!
  account: Float!
}